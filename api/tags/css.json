{"name":"css","slug":"css","count":2,"postlist":[{"title":"css世界读书笔记","slug":"css-world-note","date":"2018-11-04T02:09:15.000Z","updated":"2018-11-04T17:34:45.751Z","comments":true,"path":"api/articles/css-world-note.json","excerpt":"<p>&emsp;&emsp;一直以来都觉得前端CSS可能是最难学的，emm..最难学好学精的。直到现在写CSS，有时候遇到一些小问题都不知道怎么回事，甚至有时候还会写一些无用的的属性，是在我用了语法检测才发现以前写的部分CSS其实是不正确的。有时候不明白一些属性的原理，你加很多CSS是完全不会生效的。</p>\n<p>&emsp;&emsp;遇到CSS问题的时候特别是比较棘手的问题，张鑫旭的博客中几乎都能找到。所以对于张鑫旭在CSS方面的造诣还是比较佩服的，希望能从《CSS世界》这本书中学习到不一样的东西。但是首先先就要吐槽一下，蹩脚的比喻和美式幽默的腔调确实不适合我，如果少一点废话，这本书至少可以省去1/3的篇幅。</p>\n<p>&emsp;&emsp;内容上设计上这本书着重于CSS2，比较贴近实际，CSS3新增了很多内容，也纠正了一些之前设计上的问题。如box-sizing等，但更多的则是CSS动画，使用CSS3动画相较于之前的JS动画，可以大大减少页面的重排和重绘，从而提高网页性能。但在实际开发中更注重于实现而不是动画，个人感觉动画只是点缀，提升用户体验。在实现层CSS2更为重要，学习CSS背后的技术内幕。</p>\n<p>&emsp;&emsp;相较于其他编程语言，CSS毫无逻辑可言，所有的东西都像堆叠起来的一样，所以叫层叠样式表?对于每一条CSS属性都有其作用，如一个span是属于内联元素(inline)，是不能设置width和height的，如果使用的display属性设为block、inline-block或其它块元素，就可以为其设置宽高了。例如书中在块级元素提到的清除浮动方法：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clear</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>: <span class=\"string\">''</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">\t<span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在很长的一段时间里我都是使用clear:both，而且并不是使用伪类的方式。除了block还可以使用table、list-item.</p>\n<p>&emsp;&emsp;还有height的问题，经常会遇到设置height: 100%，实际高度永远是0，如果不明白计算方式那么永远都是0。就之前做项目的时候实现一个footer沉底，内容不足铺满一页沉底，超出页面就往下堆叠。其实思路很简单，就是footer绝对定位，bottom为0。但是代码这么写了却永远不生效。因为高度计算不正确，绝对定位就不能成功定位。vue项目中：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#app</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.footer</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在vue项目中一般footer的父元素大都不是app，可能还会有，所以这样做不ok，那么给app和footer之间的元素都加上height: 100%就可以了吗，也不行，其实实际动手试一下，调试选中app如果页面内容不足铺满屏幕，那么app的高度也不是窗口的高度，因为还少了一部分：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">html</span>, <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"&emsp;&emsp;一直以来都觉得前端CSS可能是最难学的，emm..最难学好学精的。直到现在写CSS，有时候遇到一些小问题都不知道怎么回事，甚至有时候还会写一些无用的的属性，是在我用了语法检测才发现以前写的部分CSS其实是不正确的。有时候不明白一些属性的原理，你加很多CSS","link":"","raw":null,"photos":[],"categories":[{"name":"css","slug":"css","count":1,"path":"api/categories/css.json"}],"tags":[{"name":"读书笔记","slug":"读书笔记","count":3,"path":"api/tags/读书笔记.json"},{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"}]},{"title":"【CSS】css居中方案","slug":"csscenter","date":"2018-05-07T14:54:57.000Z","updated":"2018-10-02T15:01:49.427Z","comments":true,"path":"api/articles/csscenter.json","excerpt":"<p>&emsp;&emsp;先说一下水平居中和垂直居中的一般方案.</p>\n<p>&emsp;&emsp;水平居中设置：</p>\n<blockquote>\n<ol>\n<li><p>行内元素：给父元素设置text-align:center;</p>\n</li>\n<li><p>定宽块状元素：设置左右margin值为auto</p>\n</li>\n<li><p>不定宽块状元素：</p>\n<ol>\n<li><p>在元素外加入table标签(包括table、tbody、tr、td)，在把该元素写在td内，然后设置margin的值为auto，注意是设置table不是该元素。</p>\n</li>\n<li><p>给该元素设置display:inline方法，居中方法和行内一致。</p>\n</li>\n<li><p>父元素设置float:left;position:relative和left:50%，子元素设置position:relative和left:-50%。</p>\n</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<p>&emsp;&emsp;垂直居中设置：</p>\n<blockquote>\n<ol>\n<li><p>父元素高度确定的单行文本：设置height = line-height;</p>\n</li>\n<li><p>父元素高度确定的多行文本：</p>\n<ol>\n<li><p>插入table(和水平居中一致)，设置vertical-align:middle;</p>\n</li>\n<li><p>先设置display:table-cell，在设置vertical-align: middle;  </p>\n</li>\n</ol>\n</li>\n</ol>\n</blockquote>\n<p>&emsp;&emsp;下面就提供几种居中的方法：</p>\n<h4 id=\"1-使用定位：position-absolute-设置left、top、margin-left、margin-top属性。\"><a href=\"#1-使用定位：position-absolute-设置left、top、margin-left、margin-top属性。\" class=\"headerlink\" title=\"1.使用定位：position:absolute;设置left、top、margin-left、margin-top属性。\"></a>1.使用定位：position:absolute;设置left、top、margin-left、margin-top属性。</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.content</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: -<span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;这种方法好处是浏览器基本都能兼容，不足的地方就是需要我们固定宽高。</p>\n<h4 id=\"2-使用position-absolute-设置top、bottom、right、left为0，margin-auto\"><a href=\"#2-使用position-absolute-设置top、bottom、right、left为0，margin-auto\" class=\"headerlink\" title=\"2.使用position: absolute;设置top、bottom、right、left为0，margin:auto;\"></a>2.使用position: absolute;设置top、bottom、right、left为0，margin:auto;</h4>","keywords":null,"cover":null,"content":null,"text":"&emsp;&emsp;先说一下水平居中和垂直居中的一般方案.&emsp;&emsp;水平居中设置：行内元素：给父元素设置text-align:center;定宽块状元素：设置左右margin值为auto不定宽块状元素：在元素外加入table标签(包括table、tbody、tr","link":"","raw":null,"photos":[],"categories":[{"name":"HTML/CSS","slug":"HTML-CSS","count":2,"path":"api/categories/HTML-CSS.json"}],"tags":[{"name":"css","slug":"css","count":2,"path":"api/tags/css.json"},{"name":"居中","slug":"居中","count":1,"path":"api/tags/居中.json"}]}]}