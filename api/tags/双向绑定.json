{"name":"双向绑定","slug":"双向绑定","count":1,"postlist":[{"title":"双向绑定","slug":"vuedoublesidedbind","date":"2018-08-26T02:24:55.000Z","updated":"2018-10-02T15:01:49.429Z","comments":true,"path":"api/articles/vuedoublesidedbind.json","excerpt":"<h2 id=\"双向绑定\"><a href=\"#双向绑定\" class=\"headerlink\" title=\"双向绑定\"></a>双向绑定</h2><p>&emsp;&emsp;数据的双向绑定可以说是MVVM框架的核心思想，MVVM框架包括三个部分，Model、View和ViewModel，分别指数据、视图、ViewModel可以说是前二者的连接者，二者通过它实现数据的双向绑定。以Vue为例，先看下Vue官网数据绑定的示意图：</p>\n<p><img src=\"https://i.loli.net/2018/08/26/5b827f69c1a85.png\" alt=\"数据绑定\"></p>\n<p>&emsp;&emsp;<em>这张图想表达的是，对象a下的属性b定义了getter、setter对属性进行劫持，当属性值改变时就会notify通知watch对象，而watch对象则会notify到view更新。反之，在视图改变数据时，也会触发订阅者watch，更新数据到data中。这样的model能实时响应view上的数据变化，view实时响应model的数据变化，这样的一个过程就叫数据的双向绑定。</em></p>\n<p>&emsp;&emsp;Vue是通过ES5中Object.defineProperty()这个方法来实现getter、setter对数据进行劫持，所以要运行Vue的运行环境需支持ES5。</p>\n<h2 id=\"Object-defineProperty\"><a href=\"#Object-defineProperty\" class=\"headerlink\" title=\"Object.defineProperty()\"></a>Object.defineProperty()</h2><p>&emsp;&emsp;这是一个ES5的方法，可以在一个对象上定义一个新属性或用来修改一个已经存在的属性，并返回该对象。目前对象的属性描述符有两种主要形式：此数据描述符和存取描述符。</p>\n<p>&emsp;&emsp;<em>数据描述符是一个拥有一个可写或不可写值的属性</em></p>\n<p>&emsp;&emsp;<em>存取描述符是由一对getter-setter函数功能来描述的属性</em></p>\n<p>&emsp;&emsp;描述符只能是以上两种之一，不可能同时拥有这两种。描述符属性包括：configurable(可配置性，这又为true时才能设置)、Writable(是否可写)、Enumerable(是否可枚举)、get(给属性提供getter)、setter(给属性提供setter)。看下这个例子：</p>","keywords":null,"cover":"https://i.loli.net/2018/08/26/5b827f69c1a85.png","content":null,"text":"双向绑定&emsp;&emsp;数据的双向绑定可以说是MVVM框架的核心思想，MVVM框架包括三个部分，Model、View和ViewModel，分别指数据、视图、ViewModel可以说是前二者的连接者，二者通过它实现数据的双向绑定。以Vue为例，先看下Vue官网数据绑定的示意","link":"","raw":null,"photos":[],"categories":[{"name":"vue","slug":"vue","count":6,"path":"api/categories/vue.json"}],"tags":[{"name":"双向绑定","slug":"双向绑定","count":1,"path":"api/tags/双向绑定.json"}]}]}