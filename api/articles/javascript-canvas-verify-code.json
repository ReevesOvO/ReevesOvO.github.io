{"title":"原生javascript实现canvas图形验证码","slug":"javascript-canvas-verify-code","date":"2018-10-14T12:24:50.000Z","updated":"2018-10-14T16:34:19.524Z","comments":true,"path":"api/articles/javascript-canvas-verify-code.json","photos":[],"link":"","excerpt":"&emsp;&emsp;感觉自己最近好像很少拿原生js写东西了，自己的js水平也还有待提高。上周做原型设计的时候设计了一个图形验证码，感觉这么小一个东西也没必要去找个库，就打算自己造个小轮子来用了。&emsp;&emsp;图形验证码的作用是一种人机识别的手段，目的是为了区分正常人和机器人，所以没必要设计的太麻烦(12306之前的验证码简直!!)，所以就采用数字+大小写字母共4个字符进行验证，用canvas进行绘制，如果只是简单这样也太简单了，像接触到的其他网站使用的验证码还有背景色和干扰的线条，基本上这就是实现的思路了。&emsp;&emsp;根据实现的思路，随机颜色的方法、生成随机数的方法肯定是需要的。1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>/*<br> * 生成一个随机数<br> */<br>function randomNum(min, max) &#123;<br>    return Math.floor(Math.random() * (max - min) + min);<br>&#125;<br><br>/*<br> * 生成随机颜色rgb值<br> */<br>function randomColor(min, max) &#123;<br>    const r = randomNum(min, max);<br>    const g = randomNum(min, max);<br>    const b = randomNum(min, max);<br>    return `rgb($&#123;r&#125;, $&#123;g&#125;, $&#123;b&#125;)`;<br>&#125;<br>&emsp;&emsp;在html我们只要需要提供一个容器就可以了，调用时传容器id，以及图形验证码的size就可以了。1<br>&lt;div id=\"verifyContainer\"&gt;&lt;/div&gt;<br>&emsp;&emsp;获取到容器和size之后，我们得先添加一个canvas，参考了下网上其他验证码的背景色大概都在160-240左右可能这个区间的颜色会偏浅一点。1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>/*<br> * 向html添加canvas<br> */<br>function appendCanvas(id, width, height) &#123;<br>    const container = document.getElementById(id);<br>    const canvas = document.createElement('canvas');<br>    canvas.width = width;<br>    canvas.height = height;<br>    canvas.style.backgroundColor = randomColor(160, 240);<br>    container.appendChild(canvas);<br>&#125;<br>","covers":null,"content":"<p>&emsp;&emsp;感觉自己最近好像很少拿原生js写东西了，自己的js水平也还有待提高。上周做原型设计的时候设计了一个图形验证码，感觉这么小一个东西也没必要去找个库，就打算自己造个小轮子来用了。</p>\n<p>&emsp;&emsp;图形验证码的作用是一种人机识别的手段，目的是为了区分正常人和机器人，所以没必要设计的太麻烦(12306之前的验证码简直!!)，所以就采用数字+大小写字母共4个字符进行验证，用canvas进行绘制，如果只是简单这样也太简单了，像接触到的其他网站使用的验证码还有背景色和干扰的线条，基本上这就是实现的思路了。</p>\n<hr>\n<p>&emsp;&emsp;根据实现的思路，随机颜色的方法、生成随机数的方法肯定是需要的。</p>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 生成一个随机数</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">function randomNum(<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Math.<span class=\"built_in\">floor</span>(Math.<span class=\"built_in\">random</span>() * (<span class=\"built_in\">max</span> - <span class=\"built_in\">min</span>) + <span class=\"built_in\">min</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 生成随机颜色rgb值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">function randomColor(<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> r = randomNum(<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> g = randomNum(<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> b = randomNum(<span class=\"built_in\">min</span>, <span class=\"built_in\">max</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> `rgb($&#123;r&#125;, $&#123;g&#125;, $&#123;b&#125;)`;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>&emsp;&emsp;在html我们只要需要提供一个容器就可以了，调用时传容器id，以及图形验证码的size就可以了。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"verifyContainer\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;获取到容器和size之后，我们得先添加一个canvas，参考了下网上其他验证码的背景色大概都在160-240左右可能这个区间的颜色会偏浅一点。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * 向html添加canvas</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">appendCanvas</span>(<span class=\"params\">id, width, height</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"built_in\">document</span>.getElementById(id);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'canvas'</span>);</span><br><span class=\"line\">    canvas.width = width;</span><br><span class=\"line\">    canvas.height = height;</span><br><span class=\"line\">    canvas.style.backgroundColor = randomColor(<span class=\"number\">160</span>, <span class=\"number\">240</span>);</span><br><span class=\"line\">    container.appendChild(canvas);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;然后再定义两个常量及大小写字符数组和数字数组</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> numberArr = <span class=\"string\">\"0,1,2,3,4,5,6,7,8,9\"</span>.split(<span class=\"string\">','</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> characterArr = <span class=\"string\">\"A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\"</span>.split(<span class=\"string\">','</span>);</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;然后就可以开始绘制验证码了</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 绘制验证码</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawCharacter</span>(<span class=\"params\">id, width, height</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> canvas = <span class=\"built_in\">document</span>.getElementById(id).getElementsByTagName(<span class=\"string\">'canvas'</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (canvas.getContext) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> ctx = canvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ctx.textBaseline = <span class=\"string\">'middle'</span>;</span><br><span class=\"line\">    ctx.font = <span class=\"string\">'20px SimHei'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 开始绘制</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> character = textArr[randomNum(<span class=\"number\">0</span>, textArr.length)];</span><br><span class=\"line\">        <span class=\"comment\">// 随机字体颜色</span></span><br><span class=\"line\">        ctx.fillStyle = randomColor(<span class=\"number\">50</span>, <span class=\"number\">160</span>);</span><br><span class=\"line\">        ctx.shadowBlur = randomNum(<span class=\"number\">-3</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">        ctx.shadowColor = <span class=\"string\">\"rgba(0, 0, 0, 0.3)\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> x = width / <span class=\"number\">5</span> * i;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> y = height / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> deg = randomNum(<span class=\"number\">-30</span>, <span class=\"number\">30</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 设置旋转角度和坐标原点</span></span><br><span class=\"line\">        ctx.translate(x, y);</span><br><span class=\"line\">        ctx.rotate(deg * <span class=\"built_in\">Math</span>.PI / <span class=\"number\">180</span>);</span><br><span class=\"line\">        ctx.fillText(character, <span class=\"number\">0</span> , <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 恢复旋转角度和原点</span></span><br><span class=\"line\">        ctx.rotate(-deg * <span class=\"built_in\">Math</span>.PI / <span class=\"number\">180</span>);</span><br><span class=\"line\">        ctx.translate(-x, -y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>&emsp;&emsp;这样验证码就绘制出来了，但是确实太简单了一点，需要在加一点难度，加一些干扰线和干扰点。干扰线的话影响会较大一点，所以要少一点字符数量为宜，干扰点可以多一些，大概在canvas宽度1/5的样子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 绘制干扰线</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">interferenceLine</span>(<span class=\"params\">ctx, width, height</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( <span class=\"keyword\">let</span> i= <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">        ctx.strokeStyle = randomColor(<span class=\"number\">40</span>, <span class=\"number\">180</span>);</span><br><span class=\"line\">        ctx.beginPath();</span><br><span class=\"line\">        ctx.moveTo(randomNum(<span class=\"number\">0</span>, width / <span class=\"number\">2</span>), randomNum(<span class=\"number\">0</span>, height / <span class=\"number\">2</span>));</span><br><span class=\"line\">        ctx.lineTo(randomNum(<span class=\"number\">0</span>, width / <span class=\"number\">2</span>), randomNum(<span class=\"number\">0</span>, height / <span class=\"number\">2</span>));</span><br><span class=\"line\">        ctx.stroke();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 绘制干扰点</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">interferenceDot</span>(<span class=\"params\">ctx, width, height</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; width / <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">        ctx.fillStyle = randomColor(<span class=\"number\">0</span>, <span class=\"number\">255</span>);</span><br><span class=\"line\">        ctx.beginPath();</span><br><span class=\"line\">        ctx.arc(randomNum(<span class=\"number\">0</span>, width), randomNum(<span class=\"number\">0</span>, height), <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span> * <span class=\"built_in\">Math</span>.PI);</span><br><span class=\"line\">        ctx.fill();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>&emsp;&emsp;总的说来实现的比较粗糙，代码也没有去优化，本来还可以添加一些比较人性化的定制功能的，因为忙着到处看房子去了，没来得及弄，打算后面花时间优化一下。</p>\n<p>&emsp;&emsp;代码和在线演示分享在jsfiddle上，<a href=\"https://jsfiddle.net/5ws1Lcjf/\" target=\"_blank\" rel=\"noopener\">check</a>.</p>\n","categories":[{"name":"javascript","slug":"javascript","count":4,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":2,"path":"api/tags/javascript.json"},{"name":"验证码","slug":"验证码","count":1,"path":"api/tags/验证码.json"}]}